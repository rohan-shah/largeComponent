qt5_wrap_cpp(subObservationVisualiser_MOC_SOURCES subObservationVisualiserBase.h subObservationVisualiserSingle.h subObservationVisualiserCollection.h subObservationStatusBar.h ZoomGraphicsView.h)
add_executable(subObservationVisualiser subObservationVisualiserBase.cpp subObservationVisualiserBase.h subObservationVisualiserSingle.h subObservationVisualiserCollection.h subObservationVisualiserSingle.cpp subObservationVisualiserCollection.cpp main.cpp subObservationStatusBar.h subObservationStatusBar.cpp ZoomGraphicsView.h ZoomGraphicsView.cpp subObservationStatusBar.h subObservationStatusBar.cpp ${subObservationVisualiser_MOC_SOURCES})
target_link_libraries(subObservationVisualiser PUBLIC Qt5::Core Qt5::Gui Qt5::Widgets ${IGRAPH_LIBRARIES})
if(WIN32)
	target_link_libraries(subObservationVisualiser PUBLIC Qt5::WinMain)
	set_target_properties(subObservationVisualiser PROPERTIES LINK_FLAGS "/SUBSYSTEM:windows" RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR} PDB_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
else()
	if(NOT(CMAKE_CXX_COMPILER_ID MATCHES "Intel"))
		target_compile_features(subObservationVisualiser PUBLIC cxx_rvalue_references)
	else()
		target_compile_options(subObservationVisualiser PUBLIC "-std=c++11" "-fPIC")
	endif()
endif()
target_link_libraries(subObservationVisualiser PUBLIC largeComponentCommon mpfr)
target_include_directories(subObservationVisualiser PUBLIC ${Boost_INCLUDE_DIRS} ${IGRAPH_INCLUDES})
target_compile_definitions(subObservationVisualiser PUBLIC BOOST_ALL_NO_LIB BOOST_ALL_DYN_LINK)

