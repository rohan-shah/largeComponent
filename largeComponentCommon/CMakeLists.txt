cmake_minimum_required(VERSION 3.1)
set(CppFiles crudeMC.cpp context.cpp observation.cpp isLargeComponentPossible.cpp subObs.cpp importanceSamplingObservation.cpp importanceSampling.cpp subObsSequential.cpp observationSequential.cpp)
set(HeaderFiles largeComponentCommon/crudeMC.h vertexState.h context.h includeMPFRLargeComponent.h observation.h depth_first_search_restricted.hpp isLargeComponentPossible.h subObs.h observationConstructorTypes.h getObservation.hpp getSubObservation.hpp importanceSamplingObservation.h largeComponentCommon/importanceSampling.h subObsSequential.h observationSequential.h contextImpl.h)

add_library(largeComponentCommon STATIC ${CppFiles} ${HeaderFiles})
target_include_directories(largeComponentCommon PUBLIC ${Boost_INCLUDE_DIRS} ${PROJECT_SOURCE_DIR}/largeComponentCommon ${IGRAPH_INCLUDES} ${boostGraphExt_include})
target_link_libraries(largeComponentCommon PUBLIC ${Boost_LIBRARIES} mpfr)

target_compile_definitions(largeComponentCommon PUBLIC BOOST_ALL_NO_LIB BOOST_ALL_DYN_LINK)
if(WIN32)
	set_target_properties(largeComponentCommon PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR} PDB_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
	target_link_libraries(largeComponentCommon PUBLIC mpir)
else()
	if(NOT(CMAKE_CXX_COMPILER_ID MATCHES "Intel"))
		target_compile_features(largeComponentCommon PUBLIC cxx_rvalue_references)
	else()
		target_compile_options(largeComponentCommon PUBLIC "-std=c++11" "-fPIC")
	endif()
endif()
